name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install dependencies
        run: npm install --prefix ./frontend

      - name: Build React frontend
        run: npm run build --prefix ./frontend

      - name: Archive frontend build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

  build-backend:
    runs-on: ubuntu-latest
    needs: build-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.10.10

      - name: Install dependencies
        run: pip install --no-cache-dir -r backend/requirements.txt

      - name: Run tests
        run: python -m unittest discover -s backend -p '*_test.py'

  build-docker:
    runs-on: ubuntu-latest
    needs: build-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download frontend build artifacts
        uses: actions/download-artifact@v3
        with:
          name: frontend-build
          path: frontend/build

      - name: Build Docker image
        id: build_docker
        run: |
          docker build --cache-from my-web-app -t my-web-app .
          echo "::set-output name=image_name::my-web-app"

      - name: Start Docker container
        run: |
          docker run -d -t -p 8000:8000 my-web-app
          sleep 5

      - name: Test Docker container
        run: |
          curl --insecure --fail https://localhost:8000 || exit 1
          curl --fail http://localhost:8000 || exit 1

      - name: Clean up Docker container
        run: docker stop $(docker ps -aqf "name=my-web-app")
        if: always()

  clean-docker:
    runs-on: ubuntu-latest
    needs: build-docker
    if: always()
    steps:
      - name: Remove Docker container
        run: docker stop $(docker ps -aqf "name=my-web-app") || true && docker rm $(docker ps -aqf "name=my-web-app") || true

      - name: Remove Docker image
        run: docker rmi $(docker images my-web-app -q) || true

      - name: Remove Docker cache
        run: docker builder prune -f || true

      - name: Remove Docker volumes
        run: docker volume prune -f || true

      - name: Remove Docker networks
        run: docker network prune -f || true
